#!/usr/bin/env ruby

require 'bundler/setup'
require 'distribot'
require 'byebug'
require 'pp'
require 'active_support/core_ext/object'
require 'active_support/core_ext/array'
require 'active_support/json'


Distribot.configure do |config|
  config.redis_url = 'redis://172.17.0.2:6379/0'
  config.rabbitmq_url = 'amqp://distribot:distribot@172.17.0.2:5672'
end

class SimpleWorker
  include Distribot::Worker
  enumerate_with :enumerate
  process_tasks_with :process

  def enumerate(context, &callback)
    5.times do |chunk|
      id = SecureRandom.uuid
      jobs = (1..2).to_a.map{|n| {id: id, args: [chunk, n] } }
      callback.call(jobs)
#      sleep 0.1
    end
  end

  def process(context, job)
    puts "Processing job '#{context.workflow_id}.#{context.phase}.#{self} #{job[:args]}'"
#    sleep 0.1
  end
end

SimpleWorker.new

sleep
